{"version":3,"sources":["../../src/StyleProvider.js"],"names":["StyleProvider","props","context","state","theme","createTheme","nextProps","style","setState","Theme","children","Children","only","React","Component","propTypes","PropTypes","element","isRequired","object","defaultProps","childContextTypes","ThemeShape"],"mappings":"ujBAAA,4B;AACA,qC;AACA,8B;AACA,gE;;;;;AAKqBA,a;;;;;;;;;;;;;;AAcnB,uBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B;AACpBD,KADoB,CACbC,OADa;AAE1B,MAAKC,KAAL,CAAa;AACXC,MAAO,MAAKC,WAAL,CAAiBJ,KAAjB,CADI,CAAb,CAF0B;;AAK3B,C;;AAEiB;AAChB,MAAO;AACLG,MAAO,KAAKD,KAAL,CAAWC,KADb,CAAP;;AAGD,C;;AAEgCE,S,CAAW;AAC1C,GAAIA,UAAUC,KAAV,GAAoB,KAAKN,KAAL,CAAWM,KAAnC,CAA0C;AACxC,KAAKC,QAAL,CAAc;AACZJ,MAAO,KAAKC,WAAL,CAAiBC,SAAjB,CADK,CAAd;;AAGD;AACF,C;;AAEWL,K,CAAO;AACjB,MAAO,IAAIQ,gBAAJ,CAAUR,MAAMM,KAAhB,CAAP;AACD,C;;AAEQ;AACCG,QADD,CACc,KAAKT,KADnB,CACCS,QADD;;AAGP,MAAOC,iBAASC,IAAT,CAAcF,QAAd,CAAP;AACD,C,2BA3CwCG,gBAAMC,S,EAA5Bd,a,CACZe,S,CAAY,CACjBL,SAAUM,oBAAUC,OAAV,CAAkBC,UADX,CAEjBX,MAAOS,oBAAUG,MAFA,C,CADAnB,a,CAMZoB,Y,CAAe,CACpBb,MAAO,EADa,C,CANHP,a,CAUZqB,iB,CAAoB,CACzBjB,MAAOkB,kBAAWJ,UADO,C,iBAVRlB,a","file":"StyleProvider.js","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from './Theme';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\n\n/**\n *  Provides a theme to child components trough context.\n */\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    style: {},\n  };\n\n  static childContextTypes = {\n    theme: ThemeShape.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props),\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps),\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return Children.only(children);\n  }\n}\n"]}