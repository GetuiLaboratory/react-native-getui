{"version":3,"sources":["../../src/addons.js"],"names":["createVariations","createSharedStyle","capitalizeFirstLetter","value","charAt","toUpperCase","slice","baseName","nameSuffixes","key","_","reduce","result","variant","variantName","keyName","componentNames","sharedStyle","customStyles","componentName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCgBA,gB,CAAAA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CAC,iB,CAAAA,iB,CAlFhB,8B,sTAEA,QAASC,sBAAT,CAA+BC,KAA/B,CAAsC,CACpC,MAAOA,OAAMC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,GAAgCF,MAAMG,KAAN,CAAY,CAAZ,CAAvC,CACD,CAiCM,QAASN,iBAAT,CAA0BO,QAA1B,CAAoCC,YAApC,CAAkDC,GAAlD,CAAuDN,KAAvD,CAA8D,CACnE,MAAOO,kBAAEC,MAAF,CAASH,YAAT,CAAuB,SAACI,MAAD,CAASC,OAAT,CAAqB,CACjD,GAAMC,aAAcD,QAAaN,QAAb,KAAyBM,OAAzB,CAAqCN,QAAzD,CACA,GAAMQ,SAAUF,WAAaJ,GAAb,CAAmBP,sBAAsBW,OAAtB,CAAnB,CAAsDJ,GAAtE,CAGAG,OAAOE,WAAP,qBACGC,OADH,CACaZ,KADb,EAIA,MAAOS,OAAP,CACD,CAVM,CAUJ,EAVI,CAAP,CAWD,CAiCM,QAASX,kBAAT,CAA2Be,cAA3B,CAAgF,IAArCC,YAAqC,2DAAvB,EAAuB,IAAnBC,aAAmB,2DAAJ,EAAI;AACrF,MAAOR,kBAAEC,MAAF,CAASK,cAAT,CAAyB,SAACJ,MAAD,CAASO,aAAT,CAA2B;;AAEzDP,OAAOO,aAAP;AACKF,WADL;AAEKC,aAAaC,aAAb,CAFL;;;AAKA,MAAOP,OAAP;AACD,CARM,CAQJ,EARI,CAAP;AASD","file":"addons.js","sourcesContent":["import _ from 'lodash';\n\nfunction capitalizeFirstLetter(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\n\n/**\n * Creates a set of style variations with the provided name\n * suffixes. This function is useful when creating style variations\n * for styles with shorthands, e.g., margin, padding, etc. This function\n * will return an object with the keys that represent the style variations,\n * and each key will have an object with the provided key and value. Both\n * style variation, and value object keys will get the provided suffixes. The\n * style variation key names are expected to be in snake-case, and value keys\n * are expected to be in camelCase.\n *\n * Example:\n * createVariations('large-margin', ['', 'left', 'right'], 'margin', 30)\n * will return:\n * {\n *   'large-margin': {\n *     margin: 30\n *   },\n *   'large-margin-left': {\n *     marginLeft: 30,\n *   },\n *   'large-margin-right': {\n *     marginRight: 30,\n *   }\n * }\n *\n * @param baseName Base name for style variation Â§names.\n * @param nameSuffixes Suffixes that will be concatenated to baseName.\n * @param key The value key name to use.\n * @param value The value that will be assigned to the key property.\n * @returns {object} An object with the generated style variants.\n */\nexport function createVariations(baseName, nameSuffixes, key, value) {\n  return _.reduce(nameSuffixes, (result, variant) => {\n    const variantName = variant ? `${baseName}-${variant}` : baseName;\n    const keyName = variant ? `${key}${capitalizeFirstLetter(variant)}` : key;\n\n    // eslint-disable-next-line no-param-reassign\n    result[variantName] = {\n      [keyName]: value,\n    };\n\n    return result;\n  }, {});\n}\n\n/**\n * Creates a set of style rules for the provided components. This function\n * is useful when a set of components needs to have the same style. The\n * shared style will be applied to each component. It is also possible to\n * provide custom style for each component that will be applied on top of\n * the shared style.\n *\n * Example:\n * createSharedStyle(['shoutem.ui.Text', 'shoutem.ui.Title'], {\n *   color: 'white'\n * }, {\n *   'shoutem.ui.Title: {\n *     marginBottom: 15\n *   }\n * );\n * will return:\n * {\n *   'shoutem.ui.Text': {\n *     color: 'white'\n *   },\n *   'shoutem.ui.Title': {\n *     color: 'white',\n *     marginBottom: 15\n *   }\n * }\n *\n * @param componentNames The names of the components to generate styles for.\n * @param sharedStyle The style to apply to each component.\n * @param customStyles Style overrides by component names.\n * @returns {object} An object with the generated styles.\n */\nexport function createSharedStyle(componentNames, sharedStyle = {}, customStyles = {}) {\n  return _.reduce(componentNames, (result, componentName) => {\n    // eslint-disable-next-line no-param-reassign\n    result[componentName] = {\n      ...sharedStyle,\n      ...customStyles[componentName],\n    };\n\n    return result;\n  }, {});\n}\n"]}